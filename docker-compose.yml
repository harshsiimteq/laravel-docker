version: '3.3'

networks:
  myapp:

services:
  nginx:
    image: 'nginx:alpine'
    container_name: webhost
    depends_on:
      - redis
      - php
      - mysql
    ports:
      - '80:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - VIRTUAL_HOST=local.myapp.com
    networks:
      - myapp
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - "9000:9000"
    networks:
      - myapp
  mysql:
    image: 'mysql:latest'
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - '3307:3306'
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: myapp
      MYSQL_USER: root
      MYSQL_PASSWORD: your_mysql_password
      MYSQL_ROOT_PASSWORD: your_mysql_password
      SERVICE_TAG: dev
      SERVICE_NAME: mysql
    networks:
      - myapp
  redis:
    image: 'redis:alpine'
    container_name: redis
    ports:
      - "6379"
    networks:
      - myapp
  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    networks:
      - myapp
  composer:
    image: 'composer:latest'
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - myapp
  node:
    image: 'node:latest'
    container_name: node
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - myapp
